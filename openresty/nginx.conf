worker_processes 1;

events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11;
    lua_shared_dict domain_cache 10m;

    upstream frontend {
        server frontend:5173;
    }

    server {
        listen 80;
        server_name _;

        # Roda a verificação de domínio apenas na raiz
        location = / {
            access_by_lua_block {
                local http = require "resty.http"
                local httpc = http.new()
                httpc:set_timeout(5000)

                local domain = ngx.var.host

                local res, err = httpc:request_uri("http://backend:3000/resolve", {
                    method = "GET",
                    query = { domain = domain },
                })

                if not res then
                    ngx.status = 500
                    ngx.say("Erro ao consultar backend: ", err)
                    return ngx.exit(500)
                end

                if res.status ~= 200 then
                    ngx.status = 404
                    ngx.header["Content-Type"] = "text/html; charset=utf-8"
                    return ngx.exec("/not-found")
                end

                ngx.ctx.domain_id = res.body
                ngx.req.set_header("X-Domain-ID", ngx.ctx.domain_id)
            }

            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Domain-ID $http_x_domain_id;
        }

        location /not-found {
            proxy_pass http://frontend/not-found;
        }

        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
        }
    }
}