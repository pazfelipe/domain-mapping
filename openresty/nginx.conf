worker_processes 1;

events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11;
    lua_shared_dict domain_cache 10m;

    server {
        listen 80;
        server_name _;

        location / {
            access_by_lua_block {
                local http = require "resty.http"
                local httpc = http.new()
                httpc:set_timeout(2000)

                local domain = ngx.var.host

                local res, err = httpc:request_uri("http://backend:3000/resolve", {
                    method = "GET",
                    query = { domain = domain },
                })

                if not res then
                    ngx.status = 500
                    ngx.say("Erro ao consultar backend: ", err)
                    return ngx.exit(500)
                end

                if res.status ~= 200 then
                    ngx.status = 404
                    ngx.header["Content-Type"] = "text/html; charset=utf-8"
                    ngx.say("<html><body><h1>404 - Domínio não encontrado</h1></body></html>")
                    return ngx.exit(404)
                end

                -- Salva para uso posterior
                ngx.ctx.domain_id = res.body
                ngx.header["X-Domain-ID"] = ngx.ctx.domain_id
            }

            content_by_lua_block {
                ngx.header["Content-Type"] = "text/html; charset=utf-8"
                ngx.say("<html><body><h1>Domínio encontrado!</h1><p>ID: " .. ngx.ctx.domain_id .. "</p></body></html>")
            }
        }
    }
}